worker_processes  1;
events {
    worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=all:32m max_size=1g;

    upstream backend {
        server host.docker.internal:5551;
        # Для балансировки
        # server host.docker.internal:5551 weight=2;
        # server host.docker.internal:5552 weight=1;
        # server host.docker.internal:5553 weight=1;
    }

    upstream mirror_backend {
		server host.docker.internal:5555;
	}

    server {
        listen 80;
        # server_name servering.ru;
        add_header Server "servering.ru";

        # Сжатие
        ## Включить сжатие
        gzip on;
        ## Уровень сжатия, макс уровень = 9 (медленный)
        gzip_comp_level 5;
        ## Microsoft Internet Explorer 6 не поддерживает gzip
        gzip_disable "msie6";
        ## Типы файлов, для которых будет работать сжатие
		gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/jpeg;

        # Кеширование
        ## Шаблон построения ключа кеша
        proxy_cache_key $host$uri$is_args$args;
        ## Зона разделяемой памяти для кеширования
        proxy_cache all;
        ## Число запросов, после которого ответ будет закеширован
        proxy_cache_min_uses 1;
        ## Какие методы кешируются
        proxy_cache_methods GET;
        ## Время кеширования для кодов ответа
        proxy_cache_valid 15m; # по умолчанию 200, 301, 302
        proxy_cache_valid 404 1m;

        location / {
            root /usr/share/nginx/html;
            index index.html;
		}

        location /api/v1/ {
            proxy_no_cache 1;
            proxy_pass 'http://backend/api/v1/';
        }

        location /admin {
            return 301 'http://$host:5050/';
		}

        location /test {
            return 301 'http://$host:8080/';
        }

        location ~ ^/mirror1/ {
            proxy_no_cache 1;
            rewrite ^/mirror1/(.*) /$1 break;

            proxy_pass http://mirror_backend;
        }

        location /status {
			stub_status;
		}
	}
}
